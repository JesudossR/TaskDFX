@model IEnumerable<DolphinFx.Models.DatabaseDetail>

@{
    ViewData["Title"] = "Index";
}
<style>
    
</style>
<h1>Databases</h1>

<!-- Search Input -->
<div class="search-button-container">
    <div class="search-container">
        <input type="text" id="searchInput" class="form-control" placeholder="Search..." />
    </div>
    <p class="button-container">
        <a class="btn btn-primary create-button" href="javascript:void(0);" onclick="loadCreateForm()">Create New</a>
        @* <a class="btn btn-primary" asp-action="Create">Create New</a> *@
        <a class="btn btn-success" asp-action="ExportToExcel">Export to Excel</a>
    </p>
</div>
    

<div id="createFormContainer" class="form-container"></div>
<div id="editFormContainer"></div>

<table class="table"  style="width:100%;">
    <thead>
        <tr>
            <th>
                DataSource
            </th>
            <th>
                User Name
            </th>
            <th>
                Password
            </th>
            <th>
                Client Name
            </th>
            <th>
                Environment Name
            </th>
            <th>
                Application Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
@foreach (var item in Model) {
        <tr class="database-table-row" data-id="@item.DbId">
            <td>
                @Html.DisplayFor(modelItem => item.Datasource)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Client.ClientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Environments.EnvironmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Application.ApplicationName)
            </td>
            <td>
                 <a class="btn btn-success edit-button" href="javascript:void(0);"onclick="loadEditForm(@item.DbId)">Edit</a>
                @* <a class="btn btn-success" asp-action="Edit" asp-route-id="@item.DbId">Edit</a> | *@
                <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.DbId">Details</a> |
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.DbId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<!-- Modal for showing database details -->
<div class="modal fade" id="databaseDetailsModal" tabindex="-1" role="dialog" aria-labelledby="databaseDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="databaseDetailsModalLabel">Database Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Bootstrap Modal for Success Message -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    @TempData["SuccessMessage"]
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        
        $(document).ready(function () {
            // Check if there is a success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                $("#successModal").modal("show");
            }
            
             // Real-time filtering of table rows
            $('#searchInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();  // Get input value

                $("#tableBody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);  // Show rows that match the input
                });
            });
        });
        $('.database-table-row').dblclick(function () {
                var id = $(this).data('id'); // Get the ID from the data attribute

                // AJAX call to fetch details
                $.ajax({
                    url: '@Url.Action("Details", "DatabaseDetails")/' + id,
                    type: 'GET',
                    success: function (data) {
                        // Load the fetched data into the modal's body
                        $('#databaseDetailsModal .modal-body').html(data);
                        // Show the modal
                        $('#databaseDetailsModal').modal('show');
                    },
                    error: function () {
                        $('#databaseDetailsModal .modal-body').html('<p>Error loading details.</p>');
                        $('#databaseDetailsModal').modal('show');
                    }
                });
            });
        function loadForm(url, container, disableButtonClass, enableButtonClass) {
            // Disable the specified buttons before making the AJAX call
            $(disableButtonClass).prop('disabled', true).addClass('disabled');
            $(enableButtonClass).prop('disabled', true).addClass('disabled');
            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) {
                    $(container).html(result);
                    $('html, body').animate({
                        scrollTop: $(container).offset().top
                    }, 1000);
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error);
                    console.error("Error details:", xhr, status, error);
                },
                complete: function () {
                    // Re-enable the other button after AJAX call completes
                    $(enableButtonClass).prop('disabled', false);
                }
            });
        }
        function loadEditForm(id) {
            loadForm('@Url.Action("Edit", "DatabaseDetails")/' + id, '#editFormContainer', '.create-button', '.edit-button');
        }
        function loadCreateForm() {
            loadForm('@Url.Action("Create", "DatabaseDetails")', '#createFormContainer', '.edit-button', '.create-button');
        }
        
    </script>
}