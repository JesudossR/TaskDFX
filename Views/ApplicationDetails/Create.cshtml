@model DolphinFx.Models.ApplicationDetails

@{
    ViewData["Title"] = "Create";
}
<style>
    
</style>
<h1>Create</h1>

<h4>Application Details</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="ClientID" class="control-label">Client Name</label>
                    <select asp-for="ClientID" class="form-control" asp-items="ViewBag.ClientID">
                        <option value="" disabled selected>--Select a Client--</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="EnvironmentID" class="control-label">Environment Name</label>
                    <select asp-for="EnvironmentID" class="form-control" asp-items="ViewBag.EnvironmentID">
                        <option value="" disabled selected>--Select a Environment--</option>
                    </select>
                </div>
            </div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="ApplicationID" class="control-label">Application Name</label>
                    <select asp-for="ApplicationID" class="form-control" asp-items="ViewBag.ApplicationID">
                        <option value="" disabled selected>--Select a Application--</option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="Link" class="control-label"></label>
                    <input asp-for="Link" class="form-control" />
                    <span asp-validation-for="Link" class="text-danger"></span>
                </div>
            </div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="Path" class="control-label"></label>
                    <input asp-for="Path" class="form-control" />
                    <span asp-validation-for="Path" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="User" class="control-label">User Name</label>
                    <input asp-for="User" class="form-control" />
                    <span asp-validation-for="User" class="text-danger"></span>
                </div>
            </div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="UserId" class="control-label">User Role</label>
                    <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId">
                        <option value="" disabled selected>--Select a Client--</option>
                    </select>
                </div>
                 <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-danger" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
      
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Validate URL
            const linkInput = document.querySelector('input[name="Link"]');
            linkInput.addEventListener('input', function() {
                const urlPattern = /^(https?:\/\/)?([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}(:[0-9]{1,5})?(\/[^\s]*)?$/;
                const errorMessage = document.querySelector('span[data-valmsg-for="Link"]');
                if (!urlPattern.test(this.value)) {
                    errorMessage.textContent = "Please enter a valid URL.";
                } else {
                    errorMessage.textContent = "";
                }
            });
    document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.querySelector('input[name="Password"]');
        const passwordErrorMessage = document.querySelector('span[data-valmsg-for="Password"]');

        passwordInput.addEventListener('input', function() {
            // Regular expression: 
            // (?=.*[a-z]) -> At least one lowercase letter
            // (?=.*[A-Z]) -> At least one uppercase letter
            // (?=.*\d) -> At least one digit
            // .{8,} -> At least 8 characters (no max limit)
            const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;

            if (!passwordPattern.test(this.value)) {
                passwordErrorMessage.textContent = "Password must be at least 8 characters long, with at least one uppercase letter, one lowercase letter, and one digit.";
            } else {
                passwordErrorMessage.textContent = "";
            }
        });
    });  
    </script>
      
}
