@model DolphinFx.Models.Team

@{
    ViewData["Title"] = "Create";
}
<style>
</style>
<h1>Create</h1>

<h4>Team</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="TeamName" class="control-label">Team Name</label>
                    <input asp-for="TeamName" class="form-control" />
                    <span asp-validation-for="TeamName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TeamDescription" class="control-label">Team Description</label>
                    <input asp-for="TeamDescription" class="form-control" />
                    <span asp-validation-for="TeamDescription" class="text-danger"></span>
                </div>
            </div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="ClientID" class="control-label">Client Name</label>
                    <select asp-for="ClientID" class="form-control" asp-items="ViewBag.ClientID">
                        <option value="" disabled selected>--Select a Client--</option>
                    </select>
                </div>
            </div>

            <div class="form-group can-align ">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-danger" asp-action="Index">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const teamNameInput = document.querySelector('input[name="TeamName"]');
            const errorMessage = document.querySelector('span[data-valmsg-for="TeamName"]');

            teamNameInput.addEventListener('input', function () {
                // Regex to ensure the team name starts with a letter and can contain letters, numbers, and spaces, but no special characters
                const regex = /^[a-zA-Z][a-zA-Z0-9\s]*$/;

                // Validate and replace any character that is not a letter, number, or space
                if (!regex.test(this.value)) {
                    this.value = this.value.replace(/[^a-zA-Z0-9\s]/g, '');
                }

                // Check if the first character is a letter
                if (!/^[a-zA-Z]/.test(this.value)) {
                    errorMessage.textContent = "Team Name must start with a letter.";
                } else {
                    errorMessage.textContent = "";
                }
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
