@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<DolphinFx.Models.UserRole>

@{
    ViewData["Title"] = "Index";
}
<style>
    /*pagination*/
    .pg {
        margin-top: 40px;
    }

    .pagination {

        display: flex;
        /* Use flexbox for better alignment */
        justify-content: center;
        /* Center the pagination */
        align-items: center;
        /* Align items vertically in the center */
    }

    .pagination li {
        list-style: none;
        /* Remove default list styling */
        margin: 0 5px;
        /* Space between buttons */
    }

    .pagination li a {

        text-decoration: none;
        /* Remove underline from links */

        padding: 1px 7px;
        /* Add padding for better click area */
        font-size: 14px;
        /* Set a larger font size */
        border: 1px solid #007bff;
        /* Border for buttons */
        border-radius: 4px;
        /* Rounded corners */
        color: #007bff;
        /* Text color for links */
        background-color: white;
        /* Background color */
        line-height: 1.5;
        /* Adjust line height for vertical centering */
        display: inline-block;
        /* Ensure the link behaves as a block */
        transition: background-color 0.3s, color 0.3s;
        /* Smooth transitions */
    }

    .pagination li a:hover {
        background-color: #007bff;
        /* Change background on hover */
        color: white;
        /* Change text color on hover */
    }

    /* Optional: Highlight the active page */
    .pagination li.active a {
        background-color: #007bff;
        /* Highlight active page */
        color: white;
        /* Change text color for active page */
    }

    .table {
        text-align: center;
        margin: 0 auto;
    }

    body {
        height: 100%;
        margin: 0;

        justify-content: center;
        /* Horizontal centering */
        align-items: center;
        /* Vertical centering */
        text-align: center;
        /* Centers text and table content */
    }

    .button-container {
        text-align: right;
        /* Align buttons to the right */
        margin-right: auto;
        /* Optional margin to add space from the right */
    }

    .table-row {
        cursor: pointer;
        /* Pointer on hover to show the row is clickable */
    }
</style>

<h1>User Roles Table</h1>

<p class="button-container">
    <a class="btn btn-primary" asp-action="Create">Create New</a>
    <a class="btn btn-success" asp-action="ExportToExcel">Export to Excel</a> <!-- Export to Excel button -->
</p>

@* <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel"
aria-hidden="true">
<div class="modal-dialog" role="document">
<div class="modal-content">
<div class="modal-header">
<h5 class="modal-title" id="createModalLabel">Create User Role</h5>
<button type="button" class="close" data-dismiss="modal" aria-label="Close">
<span aria-hidden="true">&times;</span>
</button>
</div>
<div class="modal-body">
<form id="createForm">
<div class="form-group">
<label asp-for="Role" class="control-label">Role</label>
<select asp-for="Role" asp-items="@(ViewData["Roles"] as IEnumerable<SelectListItem>)" class="form-control">
<option value="">Select a Role</option>
</select>
<span asp-validation-for="Role" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="RoleDescription" class="control-label">Role Description</label>
<input asp-for="RoleDescription" class="form-control" />
<span asp-validation-for="RoleDescription" class="text-danger"></span>
</div>
</form>
</div>
<div class="modal-footer">
<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
<button type="button" class="btn btn-primary" id="submitCreateForm">Create</button>
</div>
</div>
</div>
</div> *@

<table class="table table-striped table-bordered table-hover" style="width:100%;">
    <thead>
        <tr>
            <th>
                Role
            </th>
            <th>
                Role Description
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-row" data-id="@item.UserID" title="Double tap to view Details">
                <td>@Html.DisplayFor(modelItem => item.Role)</td>
                <td>@Html.DisplayFor(modelItem => item.RoleDescription)</td>
                <td>
                    <a class="btn btn-success" asp-action="Edit" asp-route-id="@item.UserID">Edit</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.UserID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Pagination Controls -->
<div class="pg">
    <div class="pagination">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
   {
       LinkToPreviousPageFormat = "Prev",
       LinkToNextPageFormat = "Next",
       MaximumPageNumbersToDisplay = 2, // Adjust this to show more or fewer page numbers
       DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,// makes the 1st page as link if needed
       DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,//makes the last page no. as link if needed
       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,//previous page link is always visible unless and untill it comes to first page
        DisplayLinkToNextPage = PagedListDisplayMode.Always,//next page link is always visible unless and untill it comes to last page
        UlElementClasses = new[] { "pagination" }, // Pass class name as array
       LiElementClasses = new[] { "page-item" } // Pass class name as array
   })
    </div>
</div>
<!-- Info Message -->
<div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="infoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoModalLabel">Info</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (TempData["InfoMessage"] != null)
                {
                    @TempData["InfoMessage"]
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Bootstrap Modal for Success Message -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    @TempData["SuccessMessage"]
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">User Role Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- The details will be loaded here via AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



    <script>
        $(document).ready(function () {
        @if (TempData["InfoMessage"] != null)
        {
            <text>
                        $('#infoModal').modal('show');
            </text>
        }
                // Handle double-click event on table row to show the details modal
                $('.table-row').dblclick(function () {
                    var userId = $(this).data('id'); // Get the user ID from the data attribute

                    // AJAX call to fetch details
                    $.ajax({
                        url: '@Url.Action("Details", "UserRoles")/' + userId,
                        type: 'GET',
                        success: function (data) {
                            // Load the fetched data into the modal's body
                            $('#detailsModal .modal-body').html(data);

                            // Show the modal
                            $('#detailsModal').modal('show');
                        },
                        error: function () {
                            $('#detailsModal .modal-body').html('<p>Error loading details.</p>');
                            $('#detailsModal').modal('show');
                        }
                    });
                });

            // Show success modal if there's a success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                $("#successModal").modal("show");
            }

        });
    </script>
}