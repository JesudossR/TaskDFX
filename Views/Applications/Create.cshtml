@model DolphinFx.Models.Application

@{
    ViewData["Title"] = "Create";
}
<style>
    .flex-box {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 16px;
    }

    .form-group {
        flex: 1 1 45%;
        margin-bottom: 16px;
    }

    .form-group label {
        display: block;
        margin-bottom: 4px;
    }

    .form-group input {
        display: block;
        width: 100%;
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }
</style>
<h1 >Create</h1>

<h4>Application</h4>
<hr />
<div class="row">
    <div class="col-md-10" style="position: fixed;">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="flex-box">
                <div class="form-group">
                    <label asp-for="ApplicationName" class="control-label"></label>
                    <input asp-for="ApplicationName"  />
                    <span asp-validation-for="ApplicationName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ApplicationShortName" class="control-label"></label>
                    <input asp-for="ApplicationShortName"  />
                    <span asp-validation-for="ApplicationShortName" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="ApplicationDescription" class="control-label"></label>
                <input asp-for="ApplicationDescription"  />
                <span asp-validation-for="ApplicationDescription" class="text-danger"></span>
            </div>
            <div class="">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a class="btn btn-primary" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    @* <script>
        document.addEventListener('DOMContentLoaded', function() {
            const applicationNameInput = document.querySelector('input[name="ApplicationName"]');
            const applicationShortNameInput = document.querySelector('input[name="ApplicationShortName"]');
            
            function validateName(inputElement, errorMessageElement) {
                const regex = /^[a-zA-Z][a-zA-Z\s]*$/;
                if (!regex.test(inputElement.value)) {
                    errorMessageElement.textContent = "Name must contain only letters and spaces and start with a letter.";
                } else {
                    errorMessageElement.textContent = "";
                }
            }

            applicationNameInput.addEventListener('input', function() {
                const errorMessage = document.querySelector('span[data-valmsg-for="ApplicationName"]');
                validateName(this, errorMessage);
            });

            applicationShortNameInput.addEventListener('input', function() {
                const errorMessage = document.querySelector('span[data-valmsg-for="ApplicationShortName"]');
                validateName(this, errorMessage);
            });
        });

        $.validator.addMethod('validName', function(value, element) {
            return /^[a-zA-Z][a-zA-Z\s]*$/.test(value);
        }, 'Name must contain only letters and spaces and start with a letter.');

        $.validator.unobtrusive.adapters.add('validname', function(options) {
            options.rules['validName'] = true;
            options.messages['validName'] = options.message;
        });
    </script> *@
    <partial name="_ValidationScriptsPartial" />
}